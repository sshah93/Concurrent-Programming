symbol=,type=byte_type,name=n,offset=0,length=1,size=1,parameter=0,scope=0,byte code={},
global_variables=1,
process=increment1toN,active=0,initial=1,transitions=8,local_variables=3,
number=0,source=1,target=2,atomic=0,end=0,accept=0,line=6,statement={byte i = 1},byte code={load_const 0 0,byte_store 1 1,},
number=1,source=2,target=8,atomic=0,end=0,accept=0,line=10,statement={i > N -> break},byte code={byte_load 1 1,byte_load 0 1,icmpgt 0 0,},
number=2,source=2,target=4,atomic=0,end=0,accept=0,line=11,statement={else},byte code={logic_else 0 0,},
number=3,source=4,target=5,atomic=1,end=0,accept=0,line=13,statement={temp = n},byte code={byte_load 0 0,byte_store 2 1,},
number=4,source=5,target=6,atomic=1,end=0,accept=0,line=14,statement={n = temp + 1},byte code={byte_load 2 1,load_const 0 0,iadd 0 0,byte_store 0 0,},
number=5,source=6,target=7,atomic=1,end=0,accept=0,line=15,statement={printf("process %d, i=%d: n changed from %d to %d\n", _pid, i, temp, n)},byte code={byte_load 0 0,byte_load 2 1,byte_load 1 1,pid 0 0,printf 0 4,},
number=6,source=7,target=2,atomic=0,end=0,accept=0,line=17,statement={i = i + 1},byte code={byte_load 1 1,load_const 0 0,iadd 0 0,byte_store 1 1,},
number=7,source=8,target=0,atomic=0,end=1,accept=0,line=0,statement={},byte code={halt 0 0,},
symbol=,type=byte_type,name=increment1toN.N,offset=0,length=1,size=1,parameter=1,scope=1,byte code={},
symbol=,type=byte_type,name=increment1toN.i,offset=1,length=1,size=1,parameter=0,scope=1,byte code={},
symbol=,type=byte_type,name=increment1toN.temp,offset=2,length=1,size=1,parameter=0,scope=1,byte code={},
process=init,active=1,initial=1,transitions=8,local_variables=0,
number=0,source=1,target=2,atomic=0,end=0,accept=0,line=22,statement={n = 0},byte code={load_const 1 0,byte_store 0 0,},
number=1,source=2,target=3,atomic=1,end=0,accept=0,line=24,statement={run  increment1toN(5)},byte code={load_const 2 0,run 1 0,byte_store 0 1,},
number=2,source=3,target=4,atomic=1,end=0,accept=0,line=25,statement={run  increment1toN(5)},byte code={load_const 2 0,run 1 0,byte_store 0 1,},
number=3,source=4,target=5,atomic=0,end=0,accept=0,line=27,statement={(_nr_pr == 1) -> printf("at end of simulation n = %d\n", n)},byte code={nrpr 0 0,load_const 0 0,icmpeq 0 0,},
number=4,source=5,target=6,atomic=0,end=0,accept=0,line=27,statement={(_nr_pr == 1) -> printf("at end of simulation n = %d\n", n)},byte code={byte_load 0 0,printf 1 1,},
number=5,source=6,target=7,atomic=0,end=0,accept=0,line=28,statement={assert(n == 10)},byte code={byte_load 0 0,load_const 3 0,icmpeq 0 0,assert 0 0,},
number=6,source=7,target=8,atomic=0,end=0,accept=0,line=29,statement={printf("simulation passed assertion!\n")},byte code={printf 2 0,},
number=7,source=8,target=0,atomic=0,end=1,accept=0,line=0,statement={},byte code={halt 0 0,},
number=,offset=0,value=1,
number=,offset=1,value=0,
number=,offset=2,value=5,
number=,offset=3,value=10,
string=,offset=0,value="process %d, i=%d: n changed from %d to %d\n",
string=,offset=1,value="at end of simulation n = %d\n",
string=,offset=2,value="simulation passed assertion!\n",
